name: Docker

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  IMAGE_NAME: lazureykis/throttlecrab

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm64
            arch: arm64
    
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    outputs:
      architectures: ${{ steps.arch-list.outputs.architectures }}

    steps:
      - name: Export architecture list
        id: arch-list
        run: |
          # Export the list of architectures from the matrix
          # This will be available to all matrix jobs but we only need it once
          echo "architectures=amd64,arm64" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.arch }}

      - name: Build and push architecture-specific image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  manifest:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for manifest
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push multi-arch manifest
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          # Get architectures from build job output
          ARCHITECTURES: ${{ needs.build.outputs.architectures }}
        run: |
          set -e  # Exit on error
          
          # Convert comma-separated architectures to space-separated
          ARCH_LIST="${ARCHITECTURES//,/ }"
          
          # Create and push manifests for all tags
          for tag in $TAGS; do
            echo "Creating manifest for $tag with architectures: $ARCH_LIST"
            
            # Build the manifest create command
            MANIFEST_CMD="docker manifest create $tag"
            for arch in $ARCH_LIST; do
              MANIFEST_CMD="$MANIFEST_CMD ${tag}-${arch}"
            done
            
            # Create the manifest
            $MANIFEST_CMD || {
              echo "Failed to create manifest for $tag"
              exit 1
            }
            
            # Push the manifest
            echo "Pushing manifest for $tag"
            docker manifest push $tag || {
              echo "Failed to push manifest for $tag"
              exit 1
            }
          done
